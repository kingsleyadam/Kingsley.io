@model Kingsley.io.Models.ContactSubmit

@using System.Web.Optimization

@{
    ViewBag.Title = "Contact";
    Layout = "~/Views/Shared/_Splash.cshtml";
}

<div id="formSection">
    <form method="post" id="contactForm">
        <div class="row">
            <div class="col-md-6 col-md-offset-3">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Need some information? Send us a message.
                    </div>
                    <div class="panel-body">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger display-none" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName)
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger display-none" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email)
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger display-none" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Message)
                            @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @rows = "3", @maxlengh = "1000", @data_bind = "value:message,valueUpdate:'input'" } })
                            @*@Html.TextBoxFor(model => model.Message, new { @class = "form-control", @rows = "3", @maxlengh = "1000", @data_bind = "value:message" })*@
                            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger display-none" })
                            <span data-bind="text:charactersRemaining"></span> characters remaining
                        </div>
                    </div>
                    <div class="panel-footer">
                        <input type="submit" id="submit" value="Send" class="btn btn-default" data-loading-text="Sending..." />
                    </div>
                </div>
            </div>
        </div>
    </form>

</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")

    <script>
        function ContactViewModel() {
            var self = this;
            self.message = ko.observable('');
            self.charactersRemaining = ko.computed(function () {
                return 1000 - self.message().length});
        }
        ko.applyBindings(new ContactViewModel());
    </script>
    <script>
        $('#contactForm').submit(function () {
            if ($(this).valid()) {
                $('#submit').button('loading')

                var values =
                {
                    "FirstName": $('#@Html.IdFor(model => model.FirstName)').val(),
                    "LastName": $('#@Html.IdFor(model => model.LastName)').val(),
                    "Email": $('#@Html.IdFor(model => model.Email)').val(),
                    "Message": $('#@Html.IdFor(model => model.Message)').val()
                };

                $.post('@Url.Action("Contact")', values)
                    .done(function (response) {
                        $('#formSection').html(response);
                    });
            }
            return false;
        });
    </script>
}